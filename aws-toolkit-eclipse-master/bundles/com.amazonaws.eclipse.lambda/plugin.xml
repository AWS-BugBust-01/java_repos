<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>

  <!-- Lambda Explorer -->
  <extension point="org.eclipse.ui.navigator.navigatorContent">
    <navigatorContent
         activeByDefault="true"
         contentProvider="com.amazonaws.eclipse.explorer.lambda.LambdaContentProvider"
         id="com.amazonaws.eclipse.explorer.LambdaContent"
         labelProvider="com.amazonaws.eclipse.explorer.lambda.LambdaLabelProvider"
         name="AWS Lambda"
         priority="normal">
      <triggerPoints>
          <instanceof value="com.amazonaws.eclipse.explorer.AWSResourcesRootElement" />
      </triggerPoints>
      <!--
          The set of possible children is the elements that will
        trigger the right-click popup menu, as well as our drag and drop
        sources / targets.
       -->
      <possibleChildren>
        <or>
            <instanceof value="com.amazonaws.eclipse.explorer.lambda.LambdaContentProvider$LambdaRootElement" />
        </or>
      </possibleChildren>
      <actionProvider class="com.amazonaws.eclipse.explorer.lambda.LambdaActionProvider">
         <enablement>
            <or>
               <instanceof value="com.amazonaws.eclipse.explorer.lambda.LambdaContentProvider$LambdaRootElement"/>
               <instanceof value="com.amazonaws.eclipse.explorer.lambda.LambdaContentProvider$FunctionNode"/>
            </or>
         </enablement>
      </actionProvider>
    </navigatorContent>
  </extension>

  <!-- Lambda Function Editor -->
  <extension point="org.eclipse.ui.editors">
     <editor class="com.amazonaws.eclipse.explorer.lambda.FunctionEditor"
             default="false"
             icon="icons/function.png"
             id="com.amazonaws.eclipse.explorer.lambda.FunctionEditor"
             name="AWS Lambda Function Editor">
     </editor>
  </extension>

  <!-- New Wizards -->
   <extension point="org.eclipse.ui.newWizards">
      <wizard
            canFinishEarly="false"
            category="com.amazonaws.eclipse.sdk.category"
            class="com.amazonaws.eclipse.lambda.project.wizard.NewLambdaJavaFunctionProjectWizard"
            finalPerspective="org.eclipse.jdt.ui.JavaPerspective"
            hasPages="true"
            icon="icons/lambda-service.png"
            id="com.amazonaws.eclipse.lambda.project.wizard.newLambdaJavaFunctionProjectWizard"
            name="AWS Lambda Java Project"
            preferredPerspectives="org.eclipse.jdt.ui.JavaPerspective"
            project="true">
      </wizard>
      <wizard
            canFinishEarly="false"
            category="com.amazonaws.eclipse.sdk.category"
            class="com.amazonaws.eclipse.lambda.project.wizard.NewServerlessProjectWizard"
            finalPerspective="org.eclipse.jdt.ui.JavaPerspective"
            hasPages="true"
            icon="icons/lambda-service.png"
            id="com.amazonaws.eclipse.lambda.project.wizard.NewServerlessProjectWizard"
            name="AWS Serverless Java Project"
            preferredPerspectives="org.eclipse.jdt.ui.JavaPerspective"
            project="true">
      </wizard>
      <wizard
            canFinishEarly="false"
            category="com.amazonaws.eclipse.sdk.category"
            class="com.amazonaws.eclipse.lambda.project.wizard.NewLambdaFunctionWizard"
            hasPages="true"
            icon="icons/function.png"
            id="com.amazonaws.eclipse.lambda.project.wizard.newLambdaFunctionWizard"
            name="AWS Lambda Function"
            project="false">
      </wizard>
   </extension>

   <extension point="org.eclipse.ui.perspectiveExtensions">
      <perspectiveExtension targetID="org.eclipse.jdt.ui.JavaPerspective">
         <newWizardShortcut id="com.amazonaws.eclipse.lambda.project.wizard.newLambdaJavaFunctionProjectWizard"/>
         <newWizardShortcut id="com.amazonaws.eclipse.lambda.project.wizard.newLambdaFunctionWizard"/>
         <newWizardShortcut id="com.amazonaws.eclipse.lambda.project.wizard.NewServerlessProjectWizard"/>
      </perspectiveExtension>

      <perspectiveExtension targetID="org.eclipse.jst.j2ee.J2EEPerspective">
         <newWizardShortcut id="com.amazonaws.eclipse.lambda.project.wizard.newLambdaJavaFunctionProjectWizard"/>
         <newWizardShortcut id="com.amazonaws.eclipse.lambda.project.wizard.newLambdaFunctionWizard"/>
         <newWizardShortcut id="com.amazonaws.eclipse.lambda.project.wizard.NewServerlessProjectWizard"/>
      </perspectiveExtension>
   </extension>

   <!-- Toolbar AWS Icon Dropdown Box -->
   <extension point="org.eclipse.ui.menus">
      <menuContribution locationURI="menu:com.amazonaws.eclipse.toolbar.dropDownMenu?after=java">
         <command commandId="com.amazonaws.eclipse.lambda.newLambdaJavaFunctionProjectCommand"
                  id="com.amazonaws.eclipse.lambda.newLambdaJavaFunctionProjectMenuItem"
                  label="New AWS Lambda Java Project...">
         </command>
         <command commandId="com.amazonaws.eclipse.lambda.newLambdaFunctionCommand"
                  id="com.amazonaws.eclipse.lambda.newLambdaFunctionMenuItem"
                  label="New AWS Lambda Function...">
         </command>
         <command commandId="com.amazonaws.eclipse.lambda.NewServerlessProjectCommand"
                  id="com.amazonaws.eclipse.lambda.NewServerlessProjectMenuItem"
                  label="New AWS Serverless Project...">
         </command>
     </menuContribution>
   </extension>

  <!-- Right Click on Project Explorer View -->
  <extension point="org.eclipse.ui.menus">
     <menuContribution locationURI="popup:com.amazonaws.eclipse.popup.menu?after=additions">
         <command
              commandId="com.amazonaws.eclipse.lambda.runSamLocal"
              id="com.amazonaws.eclipse.lambda.runSamLocalMenuItem"
              label="Run on AWS SAM Local..."
              style="push">
           <visibleWhen checkEnabled="false">
              <with variable="selection">
                  <iterate ifEmpty="false">
                      <adapt type="org.eclipse.jdt.core.IOpenable"/>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
     </menuContribution>
     <menuContribution locationURI="popup:com.amazonaws.eclipse.popup.menu?after=additions">
         <command
              commandId="com.amazonaws.eclipse.lambda.debugSamLocal"
              id="com.amazonaws.eclipse.lambda.debugSamLocalMenuItem"
              label="Debug on AWS SAM Local..."
              style="push">
           <visibleWhen checkEnabled="false">
              <with variable="selection">
                  <iterate ifEmpty="false">
                      <adapt type="org.eclipse.jdt.core.IOpenable"/>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
     </menuContribution>

     <menuContribution locationURI="popup:com.amazonaws.eclipse.popup.menu?after=additions">
        <command
              commandId="com.amazonaws.eclipse.lambda.uploadFunctionToLambda"
              id="com.amazonaws.eclipse.lambda.uploadFunctionToLambdaMenuItem"
              label="Upload function to AWS Lambda..."
              style="push">
           <visibleWhen checkEnabled="false">
              <with variable="selection">
                  <iterate ifEmpty="false">
                      <adapt type="org.eclipse.jdt.core.IOpenable" />
                  </iterate>
               </with>
            </visibleWhen>
         </command>
     </menuContribution>
     <menuContribution locationURI="popup:com.amazonaws.eclipse.popup.menu?after=additions">
        <command
              commandId="com.amazonaws.eclipse.lambda.invokeFunction"
              id="com.amazonaws.eclipse.lambda.invokeFunctionMenuItem"
              label="Run function on AWS Lambda..."
              style="push">
           <visibleWhen checkEnabled="false">
              <with variable="selection">
                  <iterate ifEmpty="false">
                      <adapt type="org.eclipse.jdt.core.IOpenable"/>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
     </menuContribution>
     <menuContribution locationURI="popup:com.amazonaws.eclipse.popup.menu?after=additions">
        <command
              commandId="com.amazonaws.eclipse.lambda.DeployServerlessProject"
              id="com.amazonaws.eclipse.lambda.DeployServerlessProject"
              label="Deploy Serverless Project..."
              style="push">
           <visibleWhen checkEnabled="false">
              <with variable="selection">
                  <iterate ifEmpty="false">
                      <adapt type="org.eclipse.core.resources.IProject">
                          <test forcePluginActivation="true"
                                property="org.eclipse.core.resources.projectNature"
                                value="org.eclipse.jdt.core.javanature"/>
                      </adapt>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
     </menuContribution>
   </extension>

   <!-- Right Click on Editor -->
    <extension point="org.eclipse.ui.popupMenus">
        <objectContribution
            adaptable="true"
            id="com.amazonaws.eclipse.lambda.javaSourceEditorAction"
            objectClass="org.eclipse.ui.IEditorInput"
            nameFilter="*.java">
            <menu
                label="AWS Lambda"
                path="additions"
                id="com.amazonaws.eclipse.lambda.editor.contextMenu"
                icon="icons/lambda-service.png">
                <separator name="group" />
            </menu>
            <action class="com.amazonaws.eclipse.lambda.upload.wizard.editoraction.RunOnLambdaAction"
                enablesFor="1"
                id="com.amazonaws.eclipse.lambda.editor.runFunctionAction"
                label="Run function on AWS Lambda..."
                menubarPath="com.amazonaws.eclipse.lambda.editor.contextMenu/group" />
            <action class="com.amazonaws.eclipse.lambda.upload.wizard.editoraction.UploadToLambdaAction"
                enablesFor="1"
                id="com.amazonaws.eclipse.lambda.editor.uploadFunctionAction"
                label="Upload function to AWS Lambda..."
                menubarPath="com.amazonaws.eclipse.lambda.editor.contextMenu/group" />
            <action class="com.amazonaws.eclipse.lambda.serverless.wizard.editoraction.DeployServerlessAction"
                enablesFor="1"
                id="com.amazonaws.eclipse.lambda.editor.DeployServerlessAction"
                label="Deploy Serverless Project..."
                menubarPath="com.amazonaws.eclipse.lambda.editor.contextMenu/group" />
            <action class="com.amazonaws.eclipse.lambda.serverless.wizard.editoraction.SamLocalAction$RunSamLocalAction"
                enablesFor="1"
                id="com.amazonaws.eclipse.lambda.editor.runSamLocalAction"
                label="Run on AWS SAM Local..."
                menubarPath="com.amazonaws.eclipse.lambda.editor.contextMenu/group" />
            <action class="com.amazonaws.eclipse.lambda.serverless.wizard.editoraction.SamLocalAction$DebugSamLocalAction"
                enablesFor="1"
                id="com.amazonaws.eclipse.lambda.editor.debugSamLocalAction"
                label="Debug on AWS SAM Local..."
                menubarPath="com.amazonaws.eclipse.lambda.editor.contextMenu/group" />
        </objectContribution>
    </extension>

   <extension point="org.eclipse.ui.commands">
     <!-- Command for Creating a new Lambda Java Project -->
     <command id="com.amazonaws.eclipse.lambda.newLambdaJavaFunctionProjectCommand"
           name="New AWS Lambda Java Project"
           defaultHandler="com.amazonaws.eclipse.lambda.project.wizard.handler.NewLambdaJavaFunctionProjectHandler"
           categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Creating a new Lambda Java Handler -->
     <command id="com.amazonaws.eclipse.lambda.newLambdaFunctionCommand"
           name="New AWS Lambda Function"
           defaultHandler="com.amazonaws.eclipse.lambda.project.wizard.handler.NewLambdaFunctionHandler"
           categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Creating a new SAM Java Project -->
     <command id="com.amazonaws.eclipse.lambda.NewServerlessProjectCommand"
           name="New AWS Serverless Project"
           defaultHandler="com.amazonaws.eclipse.lambda.project.wizard.handler.NewServerlessProjectHandler"
           categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Uploading a Lambda Java Handler to AWS Lambda -->
     <command id="com.amazonaws.eclipse.lambda.uploadFunctionToLambda"
            name="Upload function to AWS Lambda"
            defaultHandler="com.amazonaws.eclipse.lambda.upload.wizard.handler.UploadFunctionToLambdaCommandHandler"
            categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Invoking an AWS Lambda Function -->
     <command id="com.amazonaws.eclipse.lambda.invokeFunction"
            name="Invoke Function"
            defaultHandler="com.amazonaws.eclipse.lambda.invoke.handler.InvokeFunctionHandler"
            categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Deploying a SAM Java Project -->
     <command id="com.amazonaws.eclipse.lambda.DeployServerlessProject"
            name="Deploy Serverless Project"
            defaultHandler="com.amazonaws.eclipse.lambda.serverless.handler.DeployServerlessProjectHandler"
            categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Running Lambda/API Gateway locally -->
     <command id="com.amazonaws.eclipse.lambda.runSamLocal"
            name="Run on AWS SAM Local"
            defaultHandler="com.amazonaws.eclipse.lambda.serverless.handler.SamLocalHandler$RunSamLocalHandler"
            categoryId="com.amazonaws.commands.category">
     </command>
     <!-- Command for Debugging Lambda/API Gateway locally -->
     <command id="com.amazonaws.eclipse.lambda.debugSamLocal"
            name="Debug on AWS SAM Local"
            defaultHandler="com.amazonaws.eclipse.lambda.serverless.handler.SamLocalHandler$DebugSamLocalHandler"
            categoryId="com.amazonaws.commands.category">
     </command>
   </extension>

  <!-- Lambda Project Decorator -->
  <extension point="org.eclipse.ui.decorators">
     <decorator id="com.amazonaws.eclipse.lambda.project.lambdaFunctionProjectDecorator"
            label="AWS Lambda Java Project Decorator"
            state="true"
            class="com.amazonaws.eclipse.lambda.project.LambdaFunctionProjectDecorator">
        <enablement>
            <objectClass name="org.eclipse.jdt.core.IJavaElement" />
        </enablement>
     </decorator>
  </extension>

 <!-- AWS SAM Local Launcher -->
  <extension
        point="org.eclipse.debug.core.launchConfigurationTypes">
     <launchConfigurationType
           id="com.amazonaws.eclipse.lambda.launching.samLocal"
           delegate="com.amazonaws.eclipse.lambda.launching.SamLocalDelegate"
           name="AWS SAM Local"
           modes="run,debug">
     </launchConfigurationType>
  </extension>

  <extension
        point="org.eclipse.debug.ui.launchConfigurationTypeImages">
     <launchConfigurationTypeImage
          id="com.amazonaws.eclipse.lambda.launching.samLocalTypeImage"
          configTypeID="com.amazonaws.eclipse.lambda.launching.samLocal"
          icon="icons/sam-local.png">
    </launchConfigurationTypeImage>
  </extension>

  <extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups">
      <launchConfigurationTabGroup
            id="com.amazonaws.eclipse.lambda.launching.samLocalTabGroup"
            type="com.amazonaws.eclipse.lambda.launching.samLocal"
            class="com.amazonaws.eclipse.lambda.launching.SamLocalTabGroup">
            <launchMode
                  mode="debug"
                  perspective="org.eclipse.debug.ui.DebugPerspective"
                  description="Run your Serverless application locally for quick development and testing">
            </launchMode>
            <launchMode
                  mode="run"
                  description="Run your Serverless application locally for quick development and testing">
            </launchMode>
      </launchConfigurationTabGroup>
   </extension>

   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            id="com.amazonaws.eclipse.lambda.launching.samLocalShortcut"
            class="com.amazonaws.eclipse.lambda.launching.SamLocalExecution"
            icon="icons/sam-local.png"
            label="AWS SAM Local"
            modes="run,debug">
            <contextualLaunch>
            <enablement>
                <count
                      value="1">
                </count>
            </enablement>
        </contextualLaunch>
      </shortcut>
   </extension>

   <!-- The processType is referenced by others. It is also defined in the code at com.amazonaws.eclipse.lambda.launching.SamLocalConstants.ProcessType -->
   <extension point="org.eclipse.debug.ui.consoleLineTrackers">
      <consoleLineTracker id="com.amazonaws.eclipse.lambda.launching.samLocalConsoleLineTracker"
            class="com.amazonaws.eclipse.lambda.launching.SamLocalConsoleLineTracker"
            processType="sam_local"/>
   </extension>

  <extension point="org.eclipse.debug.ui.consoleColorProviders">
    <consoleColorProvider
       id="com.amazonaws.eclipse.lambda.launching.samLocalConsoleColorProvider"
       class="com.amazonaws.eclipse.lambda.launching.SamLocalConsoleColorProvider"
       processType="sam_local">
    </consoleColorProvider>
  </extension>

  <!-- SAM Local preference page -->
  <extension point="org.eclipse.ui.preferencePages">
    <page
      category="com.amazonaws.eclipse.core.ui.preferences.AwsAccountPreferencePage"
      class="com.amazonaws.eclipse.lambda.preferences.SamLocalPreferencePage"
      id="com.amazonaws.eclipse.lambda.preferences.SamLocalPreferencePage"
      name="AWS SAM Local">
    </page>
  </extension>

  <extension point="org.eclipse.core.runtime.preferences">
      <initializer class="com.amazonaws.eclipse.lambda.preferences.PreferenceInitializer" />
  </extension>

  <extension
      point="org.eclipse.ui.console.consolePatternMatchListeners">
      <consolePatternMatchListener
            class="org.eclipse.jdt.internal.debug.ui.console.JavaConsoleTracker"
            regex="\(\w*${java_extensions_regex}\S*\)"
            qualifier="${java_extensions_regex}"
            id="org.eclipse.jdt.debug.ui.JavaConsoleTracker">
         <enablement>
            <or>
               <test property="org.eclipse.debug.ui.processTypeTest" value="sam_local"/>
            </or>
         </enablement>
      </consolePatternMatchListener>
      <consolePatternMatchListener
            class="org.eclipse.jdt.internal.debug.ui.console.JavaNativeConsoleTracker"
            regex="\(Native Method\)"
            qualifier="Native Method"
            id="org.eclipse.jdt.debug.ui.JavaNativeConsoleTracker">
         <enablement>
            <or>
               <test property="org.eclipse.debug.ui.processTypeTest" value="sam_local"/>
            </or>
         </enablement>
      </consolePatternMatchListener>
         <consolePatternMatchListener
            class="org.eclipse.jdt.internal.debug.ui.console.JavaExceptionConsoleTracker"
            regex="([a-zA-Z_$][a-zA-Z\d_$]*\.)*[a-zA-Z_$][a-zA-Z\d_$]*Exception[\s|:]"
            qualifier="Exception[\s|:]"
            id="org.eclipse.jdt.debug.ui.JavaExceptionConsoleTracker">
         <enablement>
            <or>
               <test property="org.eclipse.debug.ui.processTypeTest" value="sam_local"/>
            </or>
         </enablement>
      </consolePatternMatchListener>
  </extension>

  <extension point="org.eclipse.ui.console.consolePageParticipants">
    <consolePageParticipant class="com.amazonaws.eclipse.core.ansi.AnsiConsolePageParticipant" id="com.amazonaws.eclipse.core.ansi.AnsiConsolePageParticipant">
      <enablement>
        <instanceof value="org.eclipse.ui.console.IConsole" />
      </enablement>
    </consolePageParticipant>
  </extension>

</plugin>
